<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunseaiot.rbac.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.sunseaiot.rbac.model.User">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="parent_id" jdbcType="VARCHAR" property="parentId"/>
        <result column="level" jdbcType="VARCHAR" property="level"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="can_assign_role" jdbcType="BIT" property="canAssignRole"/>
        <result column="org_id" jdbcType="VARCHAR" property="orgId"/>
        <result column="create_at" jdbcType="VARCHAR" property="createAt"/>
        <result column="update_at" jdbcType="VARCHAR" property="updateAt"/>
    </resultMap>
    <sql id="Base_Column_List">
        user_id, parent_id, level, username, password, email, phone, can_assign_role,
        usercol, create_at, update_at
    </sql>
    <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>

    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{username,jdbcType=VARCHAR}
    </select>

    <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where email = #{email,jdbcType=VARCHAR}
    </select>

    <select id="selectByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where phone = #{phone,jdbcType=VARCHAR}
    </select>

    <select id="verifyUser" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where email = #{email,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.sunseaiot.rbac.model.User">
    insert into user (parent_id, level,
      username, password, email, 
      phone, can_assign_role,
      create_at, update_at)
    values ( #{parentId,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR},
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{canAssignRole,jdbcType=BIT},
      #{createAt,jdbcType=VARCHAR}, unix_timestamp(now()))
  </insert>

    <insert id="insertByUserParam" parameterType="com.sunseaiot.rbac.model.param.UserParam">
    insert into user (
    username, password, email,
    phone, create_at, update_at)
    values ( #{parentId,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR},
    #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
    #{phone,jdbcType=VARCHAR}, #{createAt,jdbcType=VARCHAR}, unix_timestamp(now()) )
  </insert>

    <insert id="insertSelective" parameterType="com.sunseaiot.rbac.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="canAssignRole != null">
                can_assign_role,
            </if>
            <if test="createAt != null">
                create_at,
            </if>
            <if test="updateAt != null">
                update_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                #{level,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="canAssignRole != null">
                #{canAssignRole,jdbcType=BIT},
            </if>
            <if test="createAt != null">
                #{createAt,jdbcType=VARCHAR},
            </if>
            <if test="updateAt != null">
                #{updateAt,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.sunseaiot.rbac.model.User">
        update user
        <set>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="canAssignRole != null">
                can_assign_role = #{canAssignRole,jdbcType=BIT},
            </if>
            <if test="1 == 1">
                update_at = unix_timestamp(now()),
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sunseaiot.rbac.model.User">
        update user
        set parent_id = #{parentId,jdbcType=VARCHAR},
          level = #{level,jdbcType=VARCHAR},
          username = #{username,jdbcType=VARCHAR},
          password = #{password,jdbcType=VARCHAR},
          email = #{email,jdbcType=VARCHAR},
          phone = #{phone,jdbcType=VARCHAR},
          can_assign_role = #{canAssignRole,jdbcType=BIT},
          update_at = unix_timestamp(now())
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <update id="updatePasswordByUsername">
        update user
        set password = #{password,jdbcType=VARCHAR}
        where username = #{username,jdbcType=VARCHAR}
    </update>
</mapper>